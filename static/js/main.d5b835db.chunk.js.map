{"version":3,"sources":["getDeviceId.js","errors.js","App.js","serviceWorker.js","index.js"],"names":["NoVideoInputDevicesError","require","defaultDeviceIdChooser","filteredDevices","videoDevices","facingMode","length","deviceId","getFacingModePattern","module","exports","getDeviceId","chooseDeviceId","Promise","resolve","reject","enumerateDevices","navigator","mediaDevices","err","then","devices","filter","device","kind","pattern","label","test","this","name","message","prototype","Error","useStyles","makeStyles","theme","root","height","flexGrow","minWidth","transform","display","modal","padding","spacing","alignItems","justifyContent","paper","font","margin","width","backgroundColor","border","boxShadow","shadows","h1","fontFamily","color","App1","classes","useState","state","setState","open","setOpen","openScanner","setOpenScanner","openHelp","setOpenHelp","openNewItem","setOpenNewItem","openMission","setOpenMission","shopCar","setShopCar","console","log","handleClose","fonts","weights","subsets","Button","variant","onClick","Modal","onClose","aria-labelledby","aria-describedby","delay","onError","error","onScan","data","keyValue","JSON","parse","style","className","Object","keys","map","item","idx","key","TextareaAutosize","rowsMax","aria-label","placeholder","defaultValue","image_url","src","prevState","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d5b835db.chunk.js","sourcesContent":["const { NoVideoInputDevicesError } = require('./errors')\n\nfunction defaultDeviceIdChooser(filteredDevices, videoDevices, facingMode) {\n  if(filteredDevices.length > 0){\n    return filteredDevices[0].deviceId\n  }\n  if(videoDevices.length == 1 || facingMode == 'user'){\n    return videoDevices[0].deviceId\n  }\n  return videoDevices[1].deviceId\n}\n\nconst getFacingModePattern = (facingMode) => facingMode == 'environment'\n  ? /rear|back|environment/ig\n  : /front|user|face/ig\n\nfunction getDeviceId(facingMode, chooseDeviceId = defaultDeviceIdChooser) {\n  // Get manual deviceId from available devices.\n  return new Promise((resolve, reject) => {\n    let enumerateDevices\n    try{\n      enumerateDevices = navigator.mediaDevices.enumerateDevices()\n    }catch(err){\n      reject(new NoVideoInputDevicesError())\n    }\n    enumerateDevices.then(devices => {\n      // Filter out non-videoinputs\n      const videoDevices = devices.filter(\n        device => device.kind == 'videoinput'\n      )\n\n      if (videoDevices.length < 1) {\n        reject(new NoVideoInputDevicesError())\n        return\n      }\n\n      const pattern = getFacingModePattern(facingMode)\n\n      // Filter out video devices without the pattern\n      const filteredDevices = videoDevices.filter(({ label }) =>\n        pattern.test(label))\n\n      resolve(chooseDeviceId(filteredDevices, videoDevices, facingMode))\n    })\n  })\n}\n\nmodule.exports = { getDeviceId, getFacingModePattern }","function NoVideoInputDevicesError() {\n    this.name = 'NoVideoInputDevicesError'\n    this.message = 'No video input devices found'\n  }\n  NoVideoInputDevicesError.prototype = new Error()\n  \n  module.exports = {\n    NoVideoInputDevicesError,\n  }","import React, { useState, useEffect } from 'react'\nimport QrReader from 'react-qr-reader'\nimport { getDeviceId, getFacingModePattern } from './getDeviceId'\nimport GetItemData from './GetItemData';\nimport Modal from '@material-ui/core/Modal';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport Button from '@material-ui/core/Button';\n//Google font loader\nimport GoogleFontLoader from 'react-google-font-loader';\n\n// const { getDeviceId, getFacingModePattern } = require('./getDeviceId')\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: 300,\n    flexGrow: 1,\n    minWidth: 400,\n    transform: 'translateZ(0)',\n    // The position fixed scoping doesn't work in IE 11.\n    // Disable this demo to preserve the others.\n    '@media all and (-ms-high-contrast: none)': {\n      display: 'none',\n    },\n  },\n  modal: {\n    display: 'flex',\n    padding: theme.spacing(1),\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    // fontFamily: \"Codystar\",\n    font: 'Codystar',\n    margin: \"0 auto\",\n    width: 400,\n    // backgroundColor: theme.palette.background.paper,\n    backgroundColor: \"black\",\n    border: '2px solid pink',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  h1: {\n    fontFamily: \"Codystar\",\n    color: \"white\",\n    backgroundColor: \"black\"\n  }\n\n}));\n\nexport default function App1() {\n  const classes = useStyles();\n  const [state, setState] = useState({});\n  const [open, setOpen] = useState(false);\n  const [openScanner, setOpenScanner] = useState(false);\n  const [openHelp, setOpenHelp] = useState(false);\n  const [openNewItem, setOpenNewItem] = useState(false);\n  const [openMission, setOpenMission] = useState(false);\n  const [shopCar, setShopCar] = useState([]);\n  console.log('shopcar', shopCar);\n  //data schema : Name,Price,Count,Image_Url\n  const handleScan = data => {\n    if (data) {\n      setOpen(true);\n      console.log('data', data)\n      // setState(data);\n      const keyValue = JSON.parse(data);\n      // const kVtoArray = Object.values(keyValue);\n\n      // console.log('keyValue', keyValue);\n      setState(keyValue)\n      console.log('state', state)\n    }\n  }\n  const handleError = err => {\n    console.error(err)\n  }\n  const allItemsSum = () => {\n  }\n  const handleClose = () => {\n    setOpen(false)\n    setOpenScanner(false)\n    setOpenHelp(false)\n    setOpenNewItem(false)\n    setOpenMission(false)\n  }\n  const handelOpenScan = () => {\n    setOpenScanner(true)\n  }\n  const handelOpenHelp = () => {\n    setOpenHelp(true)\n  }\n  const handelNewItem = () => {\n    setOpenNewItem(true)\n  }\n  const handelMission = () => {\n    setOpenMission(true)\n  }\n  const handleBuying = () => {\n    setOpen(false);\n    setShopCar(prevState => {\n      return {\n        ...prevState, state\n      }\n    })\n  }\n  return (\n    <div>\n      <GoogleFontLoader\n        fonts={[\n          {\n            font: 'Codystar',\n            weights: [400, '400i'],\n          },\n        ]}\n        subsets={['cyrillic-ext', 'greek']}\n      />\n      <Button variant=\"contained\" color=\"secondary\"\n        onClick={() => {\n          handelOpenScan()\n        }}\n      >掃描商品條碼</Button>\n      <Button variant=\"contained\" color=\"secondary\"\n        onClick={() => {\n          handelMission()\n        }}\n      >領取任務</Button>\n      <Button variant=\"contained\" color=\"secondary\"\n        onClick={() => {\n          handelNewItem()\n        }}\n      >輸入商品</Button>\n      <Button variant=\"contained\" color=\"secondary\"\n        onClick={() => {\n          handelOpenHelp()\n        }}\n      >遊戲說明\b？</Button>\n      <Modal\n        open={openScanner}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <QrReader\n          delay={300}\n          onError={handleError}\n          onScan={handleScan\n          }\n          style={{ width: '60%' }}\n        />\n      </Modal>\n      <div className={classes.root} style={{ border: \"5px solid black\" }}>\n        <div style={{ border: \"5px solid black\", backgroundColor: \"black\" }}><a style={{ color: \"white\" }}>& 收銀機 &</a></div>\n        <Modal\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div className={classes.paper} style={{ border: \"5px solid pink\" }}>\n            {Object.keys(state).map((item, idx) => (\n              <div key={idx} >\n                {item === 'image_url' ? null : <h3 className={classes.h1}>{item}:{state[item]}</h3>}\n                {item === 'image_url' ? <TextareaAutosize\n                  rowsMax={4}\n                  aria-label=\"maximum height\"\n                  placeholder=\"Maximum 4 rows\"\n                  defaultValue={state.image_url}\n                /> : null}\n                <p> {item === 'image_url' ? <img src={state.image_url} width='300px' /> : null} </p>\n              </div>))}\n            <Button color=\"primary\" variant=\"contained\" color=\"primary\" onClick={() => handleBuying()}>購買</Button>\n          </div>\n        </Modal>\n      </div>\n      <div>\n        <Modal\n          open={openMission}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div className={classes.modal}>\n            <div className={classes.paper} style={{ color: \"white\", minHeight: \"250px\" }}>\n              新任務：            </div>\n          </div>\n        </Modal>\n      </div>\n      <div>\n        <Modal\n          open={openNewItem}\n          onClose={handleClose}\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n        >\n          <div className={classes.modal}>\n            <div className={classes.paper} style={{ color: \"white\", minHeight: \"250px\" }}>\n              輸入新商品：            </div>\n          </div>\n        </Modal>\n      </div>\n      <Modal\n        open={openHelp}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <div className={classes.modal}>\n          <div className={classes.paper} style={{ color: \"white\", minHeight: \"250px\" }}>\n            遊戲說明：領取任務，將任務單列出的商品條碼都掃描進入購物車後，進行結帳即完成任務\n            </div>\n        </div>\n      </Modal>\n    </div>\n\n  )\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}